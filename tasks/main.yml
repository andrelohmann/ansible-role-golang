---

- name: GoLang | Install dependencies
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    dpkg_options: 'force-confnew,force-confdef'
    autoclean: true
    autoremove: true
    update_cache: true
    cache_valid_time: 3600
  vars:
    packages:
    - unzip

- name: GoLang | Set version
  ansible.builtin.include_tasks: version.yml

- name: GoLang | Source $HOME/.profile
  ansible.builtin.shell: "source $HOME/.profile"
  args:
    executable: /bin/bash
  changed_when: false

- name: GoLang | Check current installed version
  ansible.builtin.shell: "set -o pipefail && go version 2>&1 | grep {{ golang_version }}"
  args:
    executable: /bin/bash
  failed_when: false
  register: golang_version_match
  changed_when: false

- name: GoLang | Install golang
  ansible.builtin.include_tasks: install.yml
  when: golang_version_match.rc != 0

- name: GoLang | Iterate golang_users
  ansible.builtin.include_tasks: user.yml
  with_items: "{{ golang_users }}"
  loop_control:
    loop_var: golang_user

...
